"""initial

Revision ID: 21ddb7c501f5
Revises: 
Create Date: 2025-04-05 18:37:30.541345

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '21ddb7c501f5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id_company', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('isin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ticker', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id_company')
    )
    op.create_table('currencies',
    sa.Column('id_currency', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id_currency')
    )
    op.create_table('transaction_instruments',
    sa.Column('id_transaction_instrument', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id_transaction_instrument')
    )
    op.create_table('transaction_natures',
    sa.Column('id_transaction_nature', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id_transaction_nature')
    )
    op.create_table('transaction_places',
    sa.Column('id_transaction_place', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id_transaction_place')
    )
    op.create_table('persons',
    sa.Column('id_person', sa.Integer(), nullable=False),
    sa.Column('id_company', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['id_company'], ['companies.id_company'], ),
    sa.PrimaryKeyConstraint('id_person')
    )
    op.create_table('declarations',
    sa.Column('id_declaration', sa.Integer(), nullable=False),
    sa.Column('id_person', sa.Integer(), nullable=True),
    sa.Column('id_document', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['id_person'], ['persons.id_person'], ),
    sa.PrimaryKeyConstraint('id_declaration')
    )
    op.create_table('transactions',
    sa.Column('id_transaction', sa.Integer(), nullable=False),
    sa.Column('id_company', sa.Integer(), nullable=False),
    sa.Column('id_declaration', sa.Integer(), nullable=False),
    sa.Column('id_person', sa.Integer(), nullable=False),
    sa.Column('id_currency', sa.Integer(), nullable=False),
    sa.Column('id_transaction_nature', sa.Integer(), nullable=False),
    sa.Column('id_transaction_place', sa.Integer(), nullable=False),
    sa.Column('id_transaction_instrument', sa.Integer(), nullable=False),
    sa.Column('date_', sa.Date(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_exercice_on_option_or_free_attribution_of_stocks', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_company'], ['companies.id_company'], ),
    sa.ForeignKeyConstraint(['id_currency'], ['currencies.id_currency'], ),
    sa.ForeignKeyConstraint(['id_declaration'], ['declarations.id_declaration'], ),
    sa.ForeignKeyConstraint(['id_person'], ['persons.id_person'], ),
    sa.ForeignKeyConstraint(['id_transaction_instrument'], ['transaction_instruments.id_transaction_instrument'], ),
    sa.ForeignKeyConstraint(['id_transaction_nature'], ['transaction_natures.id_transaction_nature'], ),
    sa.ForeignKeyConstraint(['id_transaction_place'], ['transaction_places.id_transaction_place'], ),
    sa.PrimaryKeyConstraint('id_transaction')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('declarations')
    op.drop_table('persons')
    op.drop_table('transaction_places')
    op.drop_table('transaction_natures')
    op.drop_table('transaction_instruments')
    op.drop_table('currencies')
    op.drop_table('companies')
    # ### end Alembic commands ###
